;
; ex3-2.asm
;
; Created: 22/11/2021 5:51:26 PM
; Author : PaterakisA
;


.DSEG
	_tmp_: .byte 2

.CSEG

.macro set_on
ser r18
out PORTB,r18
.endm

.macro set_off
clr r20
out PORTB,r20
.endm

.org 0x00
rjmp main

main:
clr r19
ldi r24,low(RAMEND)
out SPL,r24
ldi r25,high(RAMEND)
out SPH,r25
ser r24
out DDRB,r24; port B as output
out DDRD,r24; d for output

ldi r24, (1 << PC7) | (1 << PC6) | (1 << PC5) | (1 << PC4)
out DDRC, r24

num1:
ldi r24,0xF0
rcall scan_keypad_rising_edge_sim
clr r20
or r20,r24
or r20,r25
cpi r20,0 ;if r20 is 0 after or  then there was no change in the numbers aka repeat
breq num1
cpi r25,0x10 ; num1 must be 1 aka r25 = 0001 0000 => 10H = 16D r24 = 0
brne wrong_num1
cpi r24,0  ;r24 = 0
brne wrong_num1
rjmp num2

wrong_num1:
ldi r21,1

num2:
ldi r24,0xF0
rcall scan_keypad_rising_edge_sim
clr r20
or r20,r24
or r20,r25
cpi r20,0 ;if r20 is 0 after or  then there was no change in the numbers aka repeat
breq num2

cpi r21,1
breq wrong_pass

cpi r25,0x20 ; num2 must be 2 aka r25 = 0010 0000 => 20H = 32D r24 = 0
brne wrong_pass
cpi r24,0  ;r24 = 0
brne wrong_pass

success:
rcall lcd_init_sim
	ldi r24, 'W'
	rcall lcd_data_sim
	ldi r24, 'E'
	rcall lcd_data_sim
	ldi r24, 'L'
	rcall lcd_data_sim
	ldi r24, 'C'
	rcall lcd_data_sim
	ldi r24, 'O'
	rcall lcd_data_sim
	ldi r24, 'M'
	rcall lcd_data_sim
	ldi r24, 'E'
	rcall lcd_data_sim
	ldi r24, ' '
	rcall lcd_data_sim
	ldi r24, '1'
	rcall lcd_data_sim
	ldi r24, '2'
	rcall lcd_data_sim
	set_on
	ldi r24,low(4000)
	ldi r25,high(4000)
	rcall wait_msec
	set_off
rjmp num1

wrong_pass:
	ldi r21,0x04
	rcall lcd_init_sim
	ldi r24, 'A'
	rcall lcd_data_sim
	ldi r24, 'L'
	rcall lcd_data_sim
	ldi r24, 'A'
	rcall lcd_data_sim
	ldi r24, 'R'
	rcall lcd_data_sim
	ldi r24, 'M'
	rcall lcd_data_sim
	ldi r24, ' '
	rcall lcd_data_sim
	ldi r24, 'O'
	rcall lcd_data_sim
	ldi r24, 'N'
	rcall lcd_data_sim
	seconds:
	set_on
	ldi r24,low(500)
	ldi r25,high(500)
	rcall wait_msec
	set_off
	ldi r24,low(500)
	ldi r25,high(500)
	rcall wait_msec
	dec r21
	cpi r21,0x00
	brne seconds
rjmp num1

wait_usec:
	sbiw r24,1
	nop
	nop
	nop
	nop
	brne wait_usec
ret

wait_msec:
	push r24
	push r25
	ldi r24,low(998)
	ldi r25,high(998)
	rcall wait_usec
	pop r25
	pop r24
	sbiw r24,1
	brne wait_msec
ret

scan_row_sim:
	out PORTC, r25 ;this is line picker
	push r24
	push r25
	ldi r24,low(500)
	ldi r25,high(500)
	rcall wait_usec
	pop r25
	pop r24
	nop 
	nop ;nop is used to cylce twice so there can be a position change
	in r24,PINC
	andi r24,0x0F;as with  before we picked a column and we read the column's number pressed.
ret

scan_keypad_sim:
	push r26
	push r27
	ldi r25, (1 << PC4) ;lets start with PC4
	rcall scan_row_sim
	swap r24  ;PC4 is on top 4 MSB
	mov r27,r24 ;save the input
	ldi r25, (1 << PC5)
	rcall scan_row_sim
	add r27,r24 ;            r27 is now MSB(PC4),LSB(PC5)
	ldi r25, (1 << PC6)
	rcall scan_row_sim
	swap r24
	mov r26,r24
	ldi r25, (1 << PC7)
	rcall scan_row_sim
	add r26,r24	;			r26 is now MSB(PC6),LSB(PC7)
	movw r24,r26 ;transfer results to 24-25 pair
	pop r27
	pop r26
ret

scan_keypad_rising_edge_sim:
	push r22 ; ?????????? ???? ??????????? r23:r22 ??? ????
	push r23 ; r26:r27 ????? ???? ????????? ???? ???? ???????
	push r26
	push r27
	rcall scan_keypad_sim ; ?????? ?? ???????????? ??? ?????????? ?????????
	push r24 ; ??? ?????????? ?? ??????????
	push r25
	ldi r24 ,15 ; ??????????? 15 ms (??????? ????? 10-20 msec ??? ??????????? ??? ???
	ldi r25 ,0 ; ???????????? ??? ????????????? � ????????????? ????????????)
	rcall wait_msec
	rcall scan_keypad_sim ; ?????? ?? ???????????? ???? ??? ????????
	pop r23 ; ??? ??????? ?????????? ???????????
	pop r22
	and r24 ,r22
	and r25 ,r23
	ldi r26 ,low(_tmp_) ; ??????? ??? ????????? ??? ????????? ????
	ldi r27 ,high(_tmp_) ; ??????????? ????? ??? ???????? ????? r27:r26
	ld r23 ,X+
	ld r22 ,X
	st X ,r24 ; ?????????? ??? RAM ?? ??? ?????????
	st -X ,r25 ; ??? ?????????
	com r23
	com r22 ; ???? ???? ????????? ??? ????? �?????� ???????
	and r24 ,r22
	and r25 ,r23
	pop r27 ; ????????? ???? ??????????? r27:r26
	pop r26 ; ??? r23:r22
	pop r23
	pop r22
ret 

keypad_to_ascii_sim:
	push r26 ; ?????????? ???? ??????????? r27:r26 ????? ????
	push r27 ; ????????? ???? ??? ???????
	movw r26 ,r24 ; ?????? �1� ???? ?????? ??? ?????????? r26 ????????
	; ?? ???????? ??????? ??? ????????
	ldi r24 ,'*'
	; r26
	;C 9 8 7 D # 0 *
	sbrc r26 ,0
	rjmp return_ascii
	ldi r24 ,'0'
	sbrc r26 ,1
	rjmp return_ascii
	ldi r24 ,'#'
	sbrc r26 ,2
	rjmp return_ascii
	ldi r24 ,'D'
	sbrc r26 ,3 ; ?? ??? ????? �1�??????????? ??? ret, ?????? (?? ????? �1�)
	rjmp return_ascii ; ?????????? ?? ??? ?????????? r24 ??? ASCII ???? ??? D.
	ldi r24 ,'7'
	sbrc r26 ,4
	rjmp return_ascii
	ldi r24 ,'8'
	sbrc r26 ,5
	rjmp return_ascii
	ldi r24 ,'9'
	sbrc r26 ,6
	rjmp return_ascii ;
	ldi r24 ,'C'
	sbrc r26 ,7
	rjmp return_ascii
	ldi r24 ,'4' ; ?????? �1� ???? ?????? ??? ?????????? r27 ????????
	sbrc r27 ,0 ; ?? ???????? ??????? ??? ????????
	rjmp return_ascii
	ldi r24 ,'5' 
	sbrc r27 ,1
	rjmp return_ascii
	ldi r24 ,'6'
	sbrc r27 ,2
	rjmp return_ascii
	ldi r24 ,'B'
	sbrc r27 ,3
	rjmp return_ascii
	ldi r24 ,'1'
	sbrc r27 ,4
	rjmp return_ascii ;
	ldi r24 ,'2'
	sbrc r27 ,5
	rjmp return_ascii
	ldi r24 ,'3' 
	sbrc r27 ,6
	rjmp return_ascii
	ldi r24 ,'A'
	sbrc r27 ,7
	rjmp return_ascii
	clr r24
	rjmp return_ascii
	return_ascii:
	pop r27 ; ????????? ???? ??????????? r27:r26
	pop r26
ret 

write_2_nibbles_sim:
	push r24 ; ????? ?????? ??? ??????????? ??? ?? ?????
	push r25 ; ?????????? ??? ???????????? ??????????????
	ldi r24 ,low(6000) ; ?????????
	ldi r25 ,high(6000)
	rcall wait_usec
	pop r25
	pop r24 ; ????? ????? ??????
	push r24 ; ??????? ?? 4 MSB
	in r25, PIND ; ??????????? ?? 4 LSB ??? ?? ?????????????
	andi r25, 0x0f ; ??? ?? ??? ????????? ??? ????? ??????????? ?????????
	andi r24, 0xf0 ; ????????????? ?? 4 MSB ???
	add r24, r25 ; ???????????? ?? ?? ???????????? 4 LSB
	out PORTD, r24 ; ??? ???????? ???? ?????
	sbi PORTD, PD3 ; ????????????? ?????? Enable ???? ????????? PD3
	cbi PORTD, PD3 ; PD3=1 ??? ???? PD3=0
	push r24 ; ????? ?????? ??? ??????????? ??? ?? ?????
	push r25 ; ?????????? ??? ???????????? ??????????????
	ldi r24 ,low(6000) ; ?????????
	ldi r25 ,high(6000)
	rcall wait_usec
	pop r25
	pop r24 ; ????? ????? ??????
	pop r24 ; ??????? ?? 4 LSB. ????????? ?? byte.
	swap r24 ; ????????????? ?? 4 MSB ?? ?? 4 LSB
	andi r24 ,0xf0 ; ??? ?? ??? ????? ???? ?????????????
	add r24, r25
	out PORTD, r24
	sbi PORTD, PD3 ; ???? ?????? Enable
	cbi PORTD, PD3
ret

lcd_data_sim:
	push r24 ; ?????????? ???? ??????????? r25:r24 ????? ????
	push r25 ; ????????? ???? ??? ???????
	sbi PORTD, PD2 ; ??????? ??? ?????????? ????????? (PD2=1)
	rcall write_2_nibbles_sim ; ???????? ??? byte
	ldi r24 ,43 ; ??????? 43?sec ????? ?? ??????????? ? ????
	ldi r25 ,0 ; ??? ????????? ??? ??? ??????? ??? lcd
	rcall wait_usec
	pop r25 ;????????? ???? ??????????? r25:r24
	pop r24
ret 

lcd_command_sim:
	push r24 ; ?????????? ???? ??????????? r25:r24 ????? ????
	push r25 ; ????????? ???? ??? ???????
	cbi PORTD, PD2 ; ??????? ??? ?????????? ??????? (PD2=0)
	rcall write_2_nibbles_sim ; ???????? ??? ??????? ??? ??????? 39?sec
	ldi r24, 39 ; ??? ??? ?????????? ??? ????????? ??? ??? ??? ??????? ??? lcd.
	ldi r25, 0 ; ???.: ???????? ??? ???????, ?? clear display ??? return home,
	rcall wait_usec ; ??? ???????? ????????? ?????????? ??????? ????????.
	pop r25 ; ????????? ???? ??????????? r25:r24
	pop r24
ret 

lcd_init_sim:
	push r24 ; ?????????? ???? ??????????? r25:r24 ????? ????
	push r25 ; ????????? ???? ??? ???????

	ldi r24, 40 ; ???? ? ???????? ??? lcd ????????????? ??
	ldi r25, 0 ; ????? ??????? ??? ???? ??? ????????????.
	rcall wait_msec ; ??????? 40 msec ????? ???? ?? ???????????.
	ldi r24, 0x30 ; ?????? ????????? ?? 8 bit mode
	out PORTD, r24 ; ?????? ??? ???????? ?? ??????? ???????
	sbi PORTD, PD3 ; ??? ?? ?????????? ??????? ??? ???????
	cbi PORTD, PD3 ; ??? ??????, ? ?????? ???????????? ??? ?????
	ldi r24, 39
	ldi r25, 0 ; ??? ? ???????? ??? ?????? ????????? ?? 8-bit mode
	rcall wait_usec ; ??? ?? ?????? ??????, ???? ?? ? ???????? ???? ??????????
	 ; ??????? 4 bit ?? ??????? ?? ?????????? 8 bit
	push r24 ; ????? ?????? ??? ??????????? ??? ?? ?????
	push r25 ; ?????????? ??? ???????????? ??????????????
	ldi r24,low(1000) ; ?????????
	ldi r25,high(1000)
	rcall wait_usec
	pop r25
	pop r24 ; ????? ????? ??????
	ldi r24, 0x30
	out PORTD, r24
	sbi PORTD, PD3
	cbi PORTD, PD3
	ldi r24,39
	ldi r25,0
	rcall wait_usec 
	push r24 ; ????? ?????? ??? ??????????? ??? ?? ?????
	push r25 ; ?????????? ??? ???????????? ??????????????
	ldi r24 ,low(1000) ; ?????????
	ldi r25 ,high(1000)
	rcall wait_usec
	pop r25
	pop r24 ; ????? ????? ??????
	ldi r24,0x20 ; ?????? ?? 4-bit mode
	out PORTD, r24
	sbi PORTD, PD3
	cbi PORTD, PD3
	ldi r24,39
	ldi r25,0
	rcall wait_usec
	push r24 ; ????? ?????? ??? ??????????? ??? ?? ?????
	push r25 ; ?????????? ??? ???????????? ??????????????
	ldi r24 ,low(1000) ; ?????????
	ldi r25 ,high(1000)
	rcall wait_usec
	pop r25
	pop r24 ; ????? ????? ??????
	ldi r24,0x28 ; ??????? ?????????? ???????? 5x8 ????????
	rcall lcd_command_sim ; ??? ???????? ??? ??????? ???? ?????
	ldi r24,0x0c ; ???????????? ??? ??????, ???????? ??? ???????
	rcall lcd_command_sim
	ldi r24,0x01 ; ?????????? ??? ??????
	rcall lcd_command_sim
	ldi r24, low(1530)
	ldi r25, high(1530)
	rcall wait_usec
	ldi r24 ,0x06 ; ???????????? ????????? ??????? ???? 1 ??? ??????????
	rcall lcd_command_sim ; ??? ????? ???????????? ???? ??????? ??????????? ???
	 ; ?????????????? ??? ????????? ????????? ??? ??????
	pop r25 ; ????????? ???? ??????????? r25:r24
	pop r24
ret